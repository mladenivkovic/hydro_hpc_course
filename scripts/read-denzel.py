#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
@author: dephil

program to plot MPI Output from HYDRO code
conditions: 
    read.py is in Bin/ 
    Output/ directory exists
    output has format: output_xxxxx.xxxxx
"""

import fortranfile
from matplotlib import pyplot
from os import listdir, chdir, getcwd
from os.path import dirname, abspath
import sys

CHARLENGTH = 5


def get_output_properties(filelist):
    """
    Searches for the  max. number of output steps and MPI-tasks that created the output files: output_xxxxx.xxxxx
    Return: Nout, mpi_tasks
    """
    from os.path import splitext
    old_Nout = 0
    old_ext = 0
    for i in filelist:
        fn, ext = splitext(i)
        new_Nout = int(str(fn.split('_')[-1]))
        new_ext = int(str(ext[1:]))
        if (new_Nout>old_Nout):
            old_Nout = new_Nout
        if (new_ext>old_ext):
            old_ext = new_ext
    return old_Nout+1, old_ext+1


def extract_data(out_step, mpi_task):
    """
    Extract data from a single output file with out_step and mpi_task as input
    Return: dat[x,:,:]
    """
    from numpy import array
    # path to file
    filepath = getcwd()+'/output_'+'%0*d' % (CHARLENGTH, out_step)+'.'+'%0*d' % (CHARLENGTH, mpi_task)
    # open fortran unformatted file
    f = fortranfile.FortranFile(filepath)
    [t, gamma] = f.readReals()
    [nx,ny,nvar,nstep] = f.readInts()
    dat = f.readReals()
    f.close()
    # reshape dat
    dat = array(dat)
    dat = dat.reshape(nvar,ny,nx)
    return dat


def get_data_shape(out_step, mpi_task):
    """
    Get the shape of the output array of file with given properties
    """
    return extract_data(out_step, mpi_task).shape


def concat_step(step, mpi_tasks):
    """
    Concatenates data from the same step
    """
    from numpy import concatenate
    data = extract_data(step, 0)
    for i in xrange(1, mpi_tasks):
        data = concatenate((data,extract_data(step, i)), axis=1)
    return data


def plot_step(step, mpi_tasks, var):
    """
    Plot the concatenated data for a given step
    """
    fig = pyplot.figure()
    ax = fig.add_subplot(1,1,1)
    dat = concat_step(step, mpi_tasks)
    ax.imshow(dat[var,:,:],interpolation='nearest')
    fig_name = '/var'+str(var)+'_step'+'%0*d' % (CHARLENGTH, step)+'.png'
    print "Saving",fig_name
    fig_path = getcwd()+fig_name
    pyplot.savefig(fig_path)
    pyplot.close()

    
    
if __name__=="__main__":
    ### change current working directory to the Output/ folder and get all the output files
    chdir(dirname(dirname(abspath(__file__)))+'/Output/') 
    outputlist = listdir(getcwd())
    print "Going to:",getcwd()

    ### get maximal output step and mpi_tasks
    Nout, mpi_tasks = get_output_properties(outputlist)
    print "Directory analysis:",Nout,"outputs generated by",mpi_tasks,"MPI-tasks"

    ### get output shape
    example_data = concat_step(0, mpi_tasks)
    nvar, nx, ny = example_data.shape
    print "Output shape: (nvar, ny, nx) =",example_data.shape

    ### plot data
    print "Plotting var =",sys.argv[1],"..."
    for i in xrange(Nout):
        plot_step(i, mpi_tasks, sys.argv[1])
    
    ### Test plot
#    test_data = extract_data(2, 0)
#    fig = pyplot.figure()
#    ax = fig.add_subplot(1,1,1)
#    ax.imshow(test_data[0,:,:],interpolation='nearest')
#    test_path = getcwd()+'test_data_2_0.png'
#    pyplot.savefig(test_path)
