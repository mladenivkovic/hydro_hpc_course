#!/home/ics/volker/Anaconda/bin/python
# ^ for python on zbox

#/users/biernack/Enthought/Canopy_64bit/User/bin/python 
# ^ for python on dora/ela

#/usr/bin/python # use this as shebang if on local machine

# This script is made to be executer by the makemovie script.
# It makes pngs out of fortran output.
# To be used via a bash script.
# creates a .png file with the same name in the same directory.



import fortranfile
import numpy
from os import getcwd, path, mkdir #get currend work dir, check if dir exists, make new dir
from sys import argv # command line arguments
from matplotlib import use
use('Agg') #don't show anything unless I ask you to. So no need to get graphical all over ssh.
from matplotlib import pyplot
from matplotlib.colors import LogNorm
from mpl_toolkits.axes_grid1 import make_axes_locatable, axes_size

nproc = int(argv[1])

print "Reading in files."

for i in range(0, nproc):
    inputfile = str(argv[i+2])
    f = fortranfile.FortranFile(inputfile)
    [t, gamma] = f.readReals()
    [nx,ny,nvar,nstep] = f.readInts()
    temp_data = f.readReals()
    f.close()
    
    temp_data = numpy.array(temp_data)
    temp_data = temp_data.reshape(nvar, ny, nx)
    if (i == 0):
        data = temp_data
    else:
        data = numpy.concatenate((data, temp_data), axis=2)

#Plotting
fig = pyplot.figure(facecolor='white', figsize=(12,3), dpi=150)
ax = fig.add_subplot(1,1,1)

pyplot.tight_layout() #nice layout

print "plotting"

im=ax.imshow(data[0,:,:],interpolation='none',cmap='Blues_r', origin="lower")#, norm=LogNorm()) 
#write only first and last value of axes
ax.axes.get_xaxis().set_ticks([0, data.shape[2]])
ax.axes.get_yaxis().set_ticks([0, data.shape[1]])

# Make colorbar same height as plot
divider = make_axes_locatable(ax)
cax = divider.append_axes("right", size="2%", pad=0.05)
fig.colorbar(im, cax=cax)



workdir = str(getcwd())


outputfilename = 'picoutput_parallel/'+inputfile[:-6]
extension = 'png'
fig_path = workdir+'/'+outputfilename+'.'+extension

print "saving ", fig_path
pyplot.savefig(fig_path, format=extension, facecolor=fig.get_facecolor(), transparent=False, dpi=150)
pyplot.close()

print "done"

